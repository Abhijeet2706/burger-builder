{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.css","components/Navigation/SideDrawer/SideDrawer.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Navigation/Toolbar/Toolbar.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/Burger/BuildControls/BuildControls.css","components/UI/Button/Button.css","hoc/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.css","components/UI/Backdrop/Backdrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/Order.css","hoc/Auxillary/Auxillary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/ErrorHandler/WithErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/action.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/reducer.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","errorConfirmedHandler","error","reqInterceptop","interceptors","request","use","req","resInterceptop","response","res","eject","message","instance","create","baseURL","BurgerBuilder","purchaseHandler","purchasing","purchaseCancelHandler","purchaseContinueHandler","history","push","loading","sum","disabledInfo","ings","orderSummary","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","totalPrice","dispatch","ingName","ingredientName","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","then","catch","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","get","fetchedOrders","data","err","App","Orders","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","salad","bacon","meat","cheese","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,YAAc,uCAAuC,SAAW,oCAAoC,OAAS,kCAAkC,OAAS,kCAAkC,KAAO,gCAAgC,OAAS,kCAAkC,MAAQ,iCAAiC,MAAQ,mC,oBCA/UD,EAAOC,QAAU,CAAC,WAAa,gCAAgC,KAAO,0BAA0B,MAAQ,2BAA2B,KAAO,4B,kBCA1ID,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,KAAO,4BAA4B,KAAO,8B,gBCApJD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,QAAU,0B,mBCApID,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,YAAc,gC,kBCAlGD,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,OAAS,kC,kBCApFD,EAAOC,QAAU,CAAC,cAAgB,sCAAsC,YAAc,oCAAoC,OAAS,iC,gBCAnID,EAAOC,QAAU,CAAC,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,0B,2BCA/FD,EAAOC,QAAU,CAAC,QAAU,2B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,sB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,4C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,sC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,8B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,0B,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,wB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,MAAQ,0B,iBCA5DD,EAAOC,QAAU,CAAC,gBAAkB,4C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,oC,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,wB,2NCCXC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,oECWdC,EANF,SAACF,GAAD,OACT,yBAAKG,UAAWC,IAAQC,KAAMC,MAAO,CAACC,OAAQP,EAAMO,SAChD,yBAAKC,IAAKC,IAAYC,IAAI,e,kCCOnBC,EATQ,SAAEX,GAAF,OACnB,wBAAIG,UAAWC,IAAQQ,gBACnB,kBAAC,IAAD,CACIC,GAAIb,EAAMc,KACVC,MAAOf,EAAMe,MACbC,gBAAiBZ,IAAQa,QAASjB,EAAMC,YCErCiB,EAPS,kBACpB,wBAAIf,UAAWC,IAAQe,iBACnB,kBAAC,EAAD,CAAgBL,KAAK,IAAIC,OAAK,GAA9B,kBACA,kBAAC,EAAD,CAAgBD,KAAK,WAArB,Y,iBCIOM,EARM,SAACpB,GAAD,OACjB,yBAAKG,UAAWC,IAAQiB,aAAcC,QAAStB,EAAMuB,SACjD,8BACA,8BACA,gCCWOC,EAZC,SAAExB,GAAF,OACZ,4BAAQG,UAAWC,IAAQqB,SACvB,kBAAC,EAAD,CAAcF,QAASvB,EAAM0B,sBAC7B,yBAAKvB,UAAWC,IAAQC,MACpB,kBAAC,EAAD,OAEJ,yBAAKF,UAAWC,IAAQuB,aACpB,kBAAC,EAAD,S,kCCNGC,EAJE,SAAC5B,GAAD,OACbA,EAAM6B,KAAO,yBAAK1B,UAAWC,IAAQ0B,SAAUR,QAAStB,EAAMuB,UAAkB,MCuBrEQ,EApBI,SAAE/B,GACjB,IAAIgC,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQ8B,OAInD,OAHIlC,EAAMmC,OACNH,EAAkB,CAAC5B,IAAQ6B,WAAY7B,IAAQgC,OAG/C,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUP,KAAM7B,EAAMmC,KAAMZ,QAASvB,EAAMqC,SAC3C,yBAAKlC,UAAW6B,EAAgBM,KAAK,MACjC,yBAAKnC,UAAWC,IAAQC,MACpB,kBAAC,EAAD,OAEJ,6BACI,kBAAC,EAAD,UCgBLkC,E,4MA7BXC,MAAQ,CACJC,gBAAgB,G,EAGpBC,wBAA0B,WACtB,EAAKC,SAAU,CAAEF,gBAAgB,K,EAGrCG,wBAA0B,WACtB,EAAKD,UAAU,SAAEE,GACb,MAAO,CAAEJ,gBAAiBI,EAAUJ,oB,uDAKxC,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASf,oBAAqBoB,KAAKF,0BACnC,kBAAC,EAAD,CACIT,KAAMW,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,0BACjB,0BAAMvC,UAAWC,IAAQ2C,SACpBD,KAAK9C,MAAMC,e,GAvBX+C,a,iDCsCNC,E,uKAtCP,IAAIC,EAAa,KAEjB,OAASJ,KAAK9C,MAAMmD,MAChB,IAAO,eACHD,EAAa,yBAAK/C,UAAWC,IAAQgD,cACrC,MACJ,IAAO,YACHF,EACI,yBAAK/C,UAAWC,IAAQiD,UACpB,yBAAKlD,UAAWC,IAAQkD,SACxB,yBAAKnD,UAAWC,IAAQmD,UAGhC,MACJ,IAAO,OACHL,EAAa,yBAAK/C,UAAWC,IAAQoD,OACrC,MACJ,IAAO,SACHN,EAAa,yBAAK/C,UAAWC,IAAQqD,SACrC,MACJ,IAAO,QACHP,EAAa,yBAAK/C,UAAWC,IAAQsD,QACrC,MACJ,IAAO,QACHR,EAAa,yBAAK/C,UAAWC,IAAQuD,QACrC,MACJ,QACIT,EAAa,KAGrB,OAAOA,M,GAhCgBF,aCuBhBY,EAvBA,SAAE5D,GACb6D,QAAQC,IAAI9D,GACZ,IAAI+D,EAAyBC,OAAOC,KAAMjE,EAAMkE,aAC3CC,KAAK,SAAAC,GACF,OAAO,YAAIC,MAAOrE,EAAMkE,YAAYE,KAAUD,KAAK,SAAEG,EAAGC,GACpD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGpB,KAAMiB,UAGtDK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAIP,OAHsC,IAAlCZ,EAAuBc,SACvBd,EAAyB,gEAGzB,yBAAK5D,UAAWC,IAAQ0E,QACpB,kBAAC,EAAD,CAAkB3B,KAAK,cACtBY,EACD,kBAAC,EAAD,CAAkBZ,KAAK,mB,kCCNpB4B,GAbM,SAAC/E,GAAD,OACjB,yBAAKG,UAAWC,IAAQ4E,cACpB,yBAAK7E,UAAWC,IAAQ6E,OAAQjF,EAAMkF,OACtC,4BACI/E,UAAWC,IAAQ+E,KACnB7D,QAAStB,EAAMoF,QACfC,SAAUrF,EAAMqF,UAHpB,QAIA,4BACIlF,UAAWC,IAAQkF,KACnBhE,QAAStB,EAAMuF,OAFnB,UCNFC,GAAW,CACb,CAAEN,MAAO,QAAS/B,KAAM,SACxB,CAAE+B,MAAO,QAAS/B,KAAM,SACxB,CAAE+B,MAAO,SAAU/B,KAAM,UACzB,CAAE+B,MAAO,OAAQ/B,KAAM,SAqBZsC,GAlBO,SAACzF,GAAD,OAClB,yBAAKG,UAAWC,IAAQsF,eACpB,6CAAkB,gCAAS1F,EAAM2F,MAAMC,QAAQ,KAC9CJ,GAASrB,KAAI,SAAA0B,GAAI,OACd,kBAAC,GAAD,CACIrB,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMvF,EAAM8F,gBAAgBD,EAAK1C,OACxCiC,QAAS,kBAAMpF,EAAM+F,kBAAkBF,EAAK1C,OAC5CkC,SAAUrF,EAAMqF,SAASQ,EAAK1C,WAEtC,4BACIhD,UAAWC,IAAQ4F,YACnBX,UAAWrF,EAAMiG,YACjB3E,QAAStB,EAAMkG,SAHnB,e,oBCUOC,G,oLAzBaC,EAAWC,GAC/B,OAAOD,EAAUvE,OAASiB,KAAK9C,MAAM6B,MAAQuE,EAAUnG,WAAa6C,KAAK9C,MAAMC,W,4CAI/E4D,QAAQC,IAAI,wB,+BAIZ,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUjC,KAAMiB,KAAK9C,MAAM6B,KAAMN,QAASuB,KAAK9C,MAAMsG,cACrD,yBACInG,UAAWC,KAAQ+F,MACnB7F,MAAO,CACHiG,UAAWzD,KAAK9C,MAAM6B,KAAO,gBAAkB,qBAC/C2E,QAAS1D,KAAK9C,MAAM6B,KAAO,IAAM,MAEpCiB,KAAK9C,MAAMC,e,GApBZ+C,a,oBCILyD,GANA,SAACzG,GAAD,OACX,4BACIG,UAAW,CAACC,KAAQsG,OAAQtG,KAAQJ,EAAM2G,UAAUrE,KAAK,KACzDhB,QAAStB,EAAMuB,SAAUvB,EAAMC,WC6BxB2G,G,oLA5BP/C,QAAQC,IAAI,+B,+BAGL,IAAD,OACA+C,EAAoB7C,OAAOC,KAAMnB,KAAK9C,MAAMkE,aAC7CC,KAAK,SAAAC,GACF,OACI,wBAAII,IAAKJ,GACL,0BAAM9D,MAAO,CAAEwG,cAAe,eAAiB1C,GADnD,KACmE,EAAKpE,MAAMkE,YAAYE,OAItG,OACI,kBAAC,EAAD,KACI,0CACA,iFACA,4BACKyC,GAEL,2BAAG,gDAAsB/D,KAAK9C,MAAM2F,MAAMC,QAAS,KACnD,oDACA,kBAAC,GAAD,CAAQe,QAAQ,SAASpF,QAASuB,KAAK9C,MAAM+G,mBAA7C,UACA,kBAAC,GAAD,CAAQJ,QAAQ,UAAUpF,QAASuB,KAAK9C,MAAMgH,mBAA9C,iB,GAzBWhE,a,oBCGZiE,GAJC,kBACZ,yBAAK9G,UAAWC,KAAQ8G,QAAxB,eCuCWC,GAxCU,SAACC,EAAmBC,GACzC,yDACI,WAAYrH,GAAO,IAAD,8BACd,gBAmBJsH,sBAAwB,WACpB,EAAK3E,SAAS,CAAC4E,MAAQ,QAnBvB,EAAK/E,MAAM,CACP+E,MAAO,MAHG,EADtB,iEAOyB,IAAD,OAChBzE,KAAK0E,eAAiBH,EAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKjF,SAAS,CAAC4E,MAAQ,OAChBK,KAEX9E,KAAK+E,eAAiBR,EAAMI,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAR,GAC9D,EAAK5E,SAAS,CAAC4E,MAAQA,SAbnC,6CAkBQF,EAAMI,aAAaC,QAAQM,MAAMlF,KAAK0E,gBACtCH,EAAMI,aAAaK,SAASE,MAAMlF,KAAK+E,kBAnB/C,+BAyBQ,OACQ,kBAAC,EAAD,KACI,kBAAC,GAAD,CACIhG,KAAMiB,KAAKN,MAAM+E,MACjBjB,YAAaxD,KAAKwE,uBACjBxE,KAAKN,MAAM+E,MAAMzE,KAAKN,MAAM+E,MAAMU,QAAQ,MAE/C,kBAACb,EAAqBtE,KAAK9C,YAhC/C,GAAqBgD,c,SCCVkF,G,QAJEb,EAAMc,OAAO,CAC1BC,QAAS,mDCUPC,G,kDACF,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IA4BVsI,gBAAkB,WACd,EAAK3F,SAAU,CAAE4F,YAAY,KA9Bd,EAiCnBC,sBAAwB,WACpB,EAAK7F,SAAU,CAAE4F,YAAY,KAlCd,EAqCnBE,wBAA0B,WACtB,EAAKzI,MAAM0I,QAAQC,KAAK,cApCxB,EAAKnG,MAAQ,CACT+F,YAAY,EACZK,SAAS,EACTrB,OAAO,GALI,E,6GAkBGrD,GAQlB,OAPYF,OAAOC,KAAMC,GACpBC,KAAK,SAAAC,GACF,OAAOF,EAAYE,MAEtBK,QAAQ,SAAEoE,EAAKlE,GACZ,OAAOkE,EAAMlE,IACd,GACM,I,+BAgBb,IAAMmE,EAAY,eACXhG,KAAK9C,MAAM+I,MAElB,IAAM,IAAIvE,KAAOsE,EACbA,EAAatE,GAAOsE,EAAatE,IAAQ,EAE7C,IAAIwE,EAAe,KACfpF,EAASd,KAAKN,MAAM+E,MAAQ,2DAAsC,kBAAC,GAAD,MAyBtE,OAvBKzE,KAAK9C,MAAM+I,OACZnF,EACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAQM,YAAapB,KAAK9C,MAAM+I,OAChC,kBAAC,GAAD,CACIjD,gBAAiBhD,KAAK9C,MAAMiJ,kBAC5BlD,kBAAmBjD,KAAK9C,MAAMkJ,oBAC9B7D,SAAUyD,EACV7C,YAAanD,KAAKqG,oBAAoBrG,KAAK9C,MAAM+I,MACjD7C,QAASpD,KAAKwF,gBACd3C,MAAO7C,KAAK9C,MAAM2F,SAG9BqD,EAAe,kBAAC,GAAD,CACX9E,YAAapB,KAAK9C,MAAM+I,KACxBpD,MAAO7C,KAAK9C,MAAM2F,MAClBoB,kBAAmBjE,KAAK0F,sBACxBxB,kBAAmBlE,KAAK2F,2BAE3B3F,KAAKN,MAAMoG,UACZI,EAAe,kBAAC,GAAD,OAIf,kBAAC,EAAD,KACI,kBAAC,GAAD,CAAOnH,KAAMiB,KAAKN,MAAM+F,WAAYjC,YAAaxD,KAAK0F,uBACjDQ,GAEJpF,O,GAhFWZ,aAoGboG,gBAdS,SAAA5G,GACpB,MAAO,CACHuG,KAAMvG,EAAM0B,YACZyB,MAAOnD,EAAM6G,eAIM,SAAAC,GACvB,MAAO,CACHL,kBAAmB,SAACM,GAAD,OAAaD,EAAS,CAACnG,KC5GpB,iBD4GsDqG,eAAgBD,KAC5FL,oBAAqB,SAACK,GAAD,OAAaD,EAAS,CAACnG,KC5GnB,oBD4GwDqG,eAAgBD,QAI1FH,CAA6CjC,GAAkBkB,GAAehB,K,oBE1F9EoC,GAjBS,SAACzJ,GACrB,OACI,yBAAKG,UAAWC,KAAQsJ,iBACpB,uDACA,yBAAKpJ,MAAO,CAACqJ,MAAO,OAAQC,OAAQ,SAChC,kBAAC,EAAD,CAAQ1F,YAAalE,EAAMkE,eAE/B,kBAAC,GAAD,CACIyC,QAAQ,SACRpF,QAASvB,EAAM6J,mBAFnB,UAGA,kBAAC,GAAD,CACIlD,QAAQ,UACRpF,QAASvB,EAAM8J,mBAFnB,c,wCCyCGC,GAtDD,SAAE/J,GACZ,IAAIgK,EAAe,KACbC,EAAe,CAAC7J,KAAQ8J,cAM9B,OAJIlK,EAAMmK,SAAWnK,EAAMoK,gBAAkBpK,EAAMqK,SAC/CJ,EAAatB,KAAKvI,KAAQkK,SAGrBtK,EAAMuK,aACX,IAAO,QACHP,EAAe,yCACX7J,UAAW8J,EAAa3H,KAAK,MACzBtC,EAAMwK,cAFC,CAGXC,MAAOzK,EAAMyK,MACbC,SAAU1K,EAAM2K,WACpB,MACJ,IAAO,WACHX,EAAe,4CACX7J,UAAW8J,EAAa3H,KAAK,MACzBtC,EAAMwK,cAFC,CAGXC,MAAOzK,EAAMyK,MACbC,SAAU1K,EAAM2K,WACpB,MACJ,IAAO,SACHX,EACI,4BACI7J,UAAW8J,EAAa3H,KAAK,KAC7BmI,MAAOzK,EAAMyK,MACbC,SAAU1K,EAAM2K,SACf3K,EAAMwK,cAAcI,QAAQzG,KAAI,SAAA0G,GAAM,OACnC,4BAAQrG,IAAKqG,EAAOJ,MAAOA,MAAOI,EAAOJ,OACpCI,EAAOC,kBAKxB,MACJ,QACId,EAAe,yCACX7J,UAAW8J,EAAa3H,KAAK,MACzBtC,EAAMwK,cAFC,CAGXC,MAAOzK,EAAMyK,MACbC,SAAU1K,EAAM2K,WAG5B,OACI,yBAAKxK,UAAWC,KAAQ2K,OACpB,2BAAO5K,UAAWC,KAAQ6E,OAAQjF,EAAMkF,OACvC8E,IC1CPgB,G,4MACFxI,MAAQ,CACJyI,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,UAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,EACXC,WAAW,GAEfL,OAAO,EACPjB,SAAS,GAEbuB,QAAS,CACLrB,YAAa,QACbC,cAAe,CACXrH,KAAM,OACNgI,YAAa,WAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbwB,MAAO,CACHtB,YAAa,QACbC,cAAe,CACXrH,KAAM,QACNgI,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVS,SAAS,GAEbR,OAAO,EACPjB,SAAS,GAEb0B,eAAgB,CACZxB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,GACPW,WAAY,GACZE,OAAO,IAGfU,aAAa,EACbpD,SAAS,G,EAGbqD,aAAe,SAAEC,GACbA,EAAMC,iBACN,EAAKxJ,SAAU,CAAEiG,SAAS,IAC1B,IAAMwD,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAK7J,MAAMyI,UACzCmB,EAASC,GAAyB,EAAK7J,MAAMyI,UAAUoB,GAAuB5B,MAElF,IAAM6B,EAAQ,CACVpI,YAAa,EAAKlE,MAAM+I,KACxBpD,MAAO,EAAK3F,MAAM2F,MAClB4G,UAAWH,GAEf/E,GAAMmF,KAAM,eAAgBF,GACvBG,MAAM,SAAA3E,GACH,EAAKnF,SAAU,CAAEiG,SAAS,IAC1B,EAAK5I,MAAM0I,QAAQC,KAAM,QAE5B+D,OAAO,SAAAnF,GACJ,EAAK5E,SAAU,CAAEiG,SAAS,Q,EAmCtC+D,oBAAsB,SAACT,EAAOU,GAC1B,IAAMC,EAAgB,eACf,EAAKrK,MAAMyI,WAEZ6B,EAAkB,eACjBD,EAAiBD,IAExBE,EAAmBrC,MAAQyB,EAAMa,OAAOtC,MACxCqC,EAAmBxB,MAAQ,EAAK0B,cAAcF,EAAmBrC,MAAOqC,EAAmB1B,YAC3F0B,EAAmBzC,SAAU,EAC7BwC,EAAiBD,GAAmBE,EAEpC,IAAId,GAAc,EAClB,IAAK,IAAIY,KAAmBC,EACxBb,EAAca,EAAiBD,GAAiBtB,OAASU,EAE7D,EAAKrJ,SAAS,CAACsI,UAAW4B,EAAkBb,YAAaA,K,4DA/C/CvB,EAAOwC,GACjB,IAAIC,GAAU,EACd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAM5B,WACN6B,EAA2B,KAAjBzC,EAAM0C,QAAiBD,GAGjCD,EAAMxB,YACNyB,EAAUzC,EAAM5F,QAAUoI,EAAMxB,WAAayB,GAG7CD,EAAMvB,YACNwB,EAAUzC,EAAM5F,QAAUoI,EAAMvB,WAAawB,GAG7CD,EAAMnB,QAAS,CAEfoB,EADgB,wIACEE,KAAK3C,IAAUyC,EAGrC,GAAID,EAAMtB,UAAW,CAEjBuB,EADgB,QACEE,KAAK3C,IAAUyC,EAGrC,OAAOA,I,+BAsBA,IAAD,OACAG,EAAoB,GAC1B,IAAK,IAAI7I,KAAO1B,KAAKN,MAAMyI,UACvBoC,EAAkB1E,KAAK,CACnB2E,GAAI9I,EACJ+I,OAAQzK,KAAKN,MAAMyI,UAAUzG,KAGrC,IAAIgJ,EACA,0BAAMC,SAAU3K,KAAKmJ,cAChBoB,EAAkBlJ,KAAI,SAAAuJ,GAAW,OAC9B,kBAAC,GAAD,CACIlJ,IAAKkJ,EAAYJ,GACjB/C,YAAamD,EAAYH,OAAOhD,YAChCC,cAAekD,EAAYH,OAAO/C,cAClCC,MAAOiD,EAAYH,OAAO9C,MAC1BN,SAAUuD,EAAYH,OAAOjC,MAC7BlB,eAAgBsD,EAAYH,OAAOnC,WACnCf,QAASqD,EAAYH,OAAOlD,QAC5BM,QAAS,SAACuB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOwB,EAAYJ,UAExE,kBAAC,GAAD,CAAQ3G,QAAQ,UAAUtB,UAAWvC,KAAKN,MAAMwJ,aAAhD,UAMR,OAHKlJ,KAAKN,MAAMoG,UACZ4E,EAAO,kBAAC,GAAD,OAGP,yBAAKrN,UAAWC,KAAQ4K,aACpB,uDACCwC,O,GA/LSxK,aA4MXoG,gBAPS,SAAA5G,GACpB,MAAO,CACHuG,KAAMvG,EAAM0B,YACZyB,MAAOnD,EAAM6G,cAIND,CAAyB4B,IC9MlC2C,G,4MAEFC,yBAA2B,WACvB,EAAK5N,MAAM0I,QAAQmF,U,EAGvBC,yBAA2B,WACvB,EAAK9N,MAAM0I,QAAQqF,QAAS,2B,uDAI5B,OACI,6BACI,kBAAC,GAAD,CACI7J,YAAapB,KAAK9C,MAAM+I,KACxBc,kBAAmB/G,KAAK8K,yBACxB9D,kBAAmBhH,KAAKgL,2BAC5B,kBAAC,IAAD,CACIE,KAAMlL,KAAK9C,MAAMiO,MAAMD,KAAO,gBAC9BE,UAAWlD,U,GAnBRhI,aA+BRoG,gBANS,SAAA5G,GACpB,MAAO,CACHuG,KAAMvG,EAAM0B,eAILkF,CAAyBuE,I,oBCFzBrB,GAhCD,SAAEtM,GACZ,IAAMkE,EAAc,GAEpB,IAAM,IAAIsF,KAAkBxJ,EAAMkE,YAC9BA,EAAYyE,KACR,CACIuC,KAAM1B,EACN2E,OAAQnO,EAAMkE,YAAYsF,KAKtC,IAAM4E,EAAmBlK,EAAYC,KAAI,SAAAkK,GACrC,OAAO,0BACH/N,MAAO,CACHwG,cAAe,aACfwH,QAAS,eACT1E,OAAQ,QACR2E,OAAQ,iBACRC,QAAS,OAEbhK,IAAK6J,EAAGnD,MAAOmD,EAAGnD,KARf,KAQuBmD,EAAGF,OAR1B,QAWX,OACI,yBAAKhO,UAAWC,KAAQqO,OACpB,2CAAiBL,GACjB,qCAAU,uCAAaM,OAAOC,WAAY3O,EAAM2F,OAAQC,QAAS,OCY9DuB,M,4MApCX3E,MAAQ,CACJoM,OAAQ,GACRhG,SAAS,G,kEAGQ,IAAD,OAChBvB,GAAMwH,IAAI,gBACLpC,MAAK,SAAA1E,GACF,IAAM+G,EAAgB,GACtB,IAAK,IAAItK,KAAOuD,EAAIgH,KAChBD,EAAcnG,KAAd,eACOZ,EAAIgH,KAAKvK,GADhB,CAEI8I,GAAI9I,KAGZ,EAAK7B,SAAS,CAACiG,SAAS,EAAOgG,OAAQE,OAE1CpC,OAAM,SAAAsC,GACH,EAAKrM,SAAS,CAACiG,SAAS,S,+BAKhC,OACI,6BACK9F,KAAKN,MAAMoM,OAAOzK,KAAI,SAAAmI,GAAK,OACxB,kBAAC,GAAD,CACI9H,IAAK8H,EAAMgB,GACXpJ,YAAaoI,EAAMpI,YACnByB,MAAO2G,EAAM3G,gB,GA9BhB3C,aAqCmBqE,ICnBzB4H,G,uKAdX,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOjB,KAAK,YAAYE,UAAWP,KACnC,kBAAC,IAAD,CAAOK,KAAK,UAAUE,UAAWgB,KACjC,kBAAC,IAAD,CAAOlB,KAAK,IAAIjN,OAAK,EAACmN,UAAW7F,Y,GAR3BrF,aCEZmM,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DA6BN,SAASuB,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACThD,MAAK,SAAAoD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBvN,QACfkN,UAAUC,cAAcO,WAK1BrM,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrB4I,OAAM,SAAAnF,GACL1D,QAAQ0D,MAAM,4CAA6CA,M,aCpE3D4I,GAAe,CACjBjM,YAAa,CACTkM,MAAO,EACPC,MAAM,EACNC,KAAK,EACLC,OAAO,GAEXlH,WAAY,IAGVmH,GAAoB,CACtBJ,MAAO,GACPG,OAAQ,KACRD,KAAM,KACND,MAAO,MA4BII,GAzBC,WAAqC,IAAnCjO,EAAkC,uDAA1B2N,GAAcO,EAAY,uCAChD,OAASA,EAAOvN,MACZ,ITrBsB,iBSsBlB,OAAO,eACAX,EADP,CAEI0B,YAAY,eACL1B,EAAM0B,YADF,gBAENwM,EAAOlH,eAAiBhH,EAAM0B,YAAYwM,EAAOlH,gBAAkB,IAExEH,WAAY7G,EAAM6G,WAAamH,GAAkBE,EAAOlH,kBAEhE,IT7ByB,oBS8BrB,OAAO,eACAhH,EADP,CAEI0B,YAAY,eACL1B,EAAM0B,YADF,gBAENwM,EAAOlH,eAAiBhH,EAAM0B,YAAYwM,EAAOlH,gBAAkB,IAExEH,WAAY7G,EAAM6G,WAAamH,GAAkBE,EAAOlH,kBAEhE,QACI,OAAOhH,IC7BbmO,GAAQC,YAAYH,IAEpBI,GACF,kBAAC,IAAD,CAAUF,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAKZG,IAASC,OAAQF,GAAKG,SAASC,eAAgB,SFDhC,WACb,GAA6C,kBAAmBvB,UAAW,CAGzE,GADkB,IAAIwB,IAAIC,kBAAwB9B,OAAOC,UAC3C8B,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAM0B,kBAAN,sBAENhC,GAwCX,SAAiCM,GAE/B6B,MAAM7B,GACHhD,MAAK,SAAA3E,GAGkB,MAApBA,EAASyJ,SACuD,IAAhEzJ,EAAS0J,QAAQ3C,IAAI,gBAAgB4C,QAAQ,cAG7C/B,UAAUC,cAAc+B,MAAMjF,MAAK,SAAAoD,GACjCA,EAAa8B,aAAalF,MAAK,WAC7B4C,OAAOC,SAASsC,eAKpBpC,GAAgBC,MAGnB/C,OAAM,WACL7I,QAAQC,IACN,oEAzDA+N,CAAwBpC,GAHxBD,GAAgBC,OEdxBqC,K","file":"static/js/main.a5ae99f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient__BreadBottom__HuxZP\",\"BreadTop\":\"BurgerIngredient__BreadTop__10-cT\",\"Seeds1\":\"BurgerIngredient__Seeds1__3xHtz\",\"Seeds2\":\"BurgerIngredient__Seeds2__1cUso\",\"Meat\":\"BurgerIngredient__Meat__13nAN\",\"Cheese\":\"BurgerIngredient__Cheese__1FxeY\",\"Salad\":\"BurgerIngredient__Salad__1iTJE\",\"Bacon\":\"BurgerIngredient__Bacon__3vrAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar__Toolbar__2JJW-\",\"Logo\":\"Toolbar__Logo__1efBD\",\"DesktopOnly\":\"Toolbar__DesktopOnly__WADUd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__3pLYC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle__DrawerToggle__26to0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load2\":\"Spinner__load2__1N7mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1J81r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport classes from './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport classes from './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport classes from './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxillary/Auxillary';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Auxillary/Auxillary';\nimport classes from './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ( 'meat' ):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport classes from './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button \n            className={classes.Less} \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className={classes.More} \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport classes from './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\n\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Auxillary/Auxillary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate ( nextProps, nextState ) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentWillUpdate () {\n        console.log('[Modal] WillUpdate');\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n                <div\n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}>\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\n\nimport classes from './Button.css';\n\nconst button = (props) => (\n    <button\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Auxillary/Auxillary';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;","import React, { Component }from \"react\"\nimport Aux from '../Auxillary/Auxillary'\nimport Modal from \"../../components/UI/Modal/Modal\"\n\nconst withErrorHandler = (WrappedComponent , axios) => {\n    return class extends Component {\n        constructor(props){\n            super()\n            this.state={\n                error: null\n            }\n        }\n        componentWillMount(){\n            this.reqInterceptop = axios.interceptors.request.use(req =>{\n                this.setState({error : null})\n                return req;\n            })\n            this.resInterceptop = axios.interceptors.response.use(res => res, error =>{\n                this.setState({error : error})\n            })\n        }\n\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptop);\n            axios.interceptors.response.eject(this.resInterceptop);\n        }\n        errorConfirmedHandler = () => {\n            this.setState({error : null})\n        }\n        render(){\n            return(\n                    <Aux>\n                        <Modal \n                            show={this.state.error}\n                            modalClosed={this.errorConfirmedHandler}>\n                            {this.state.error?this.state.error.message:null}\n                        </Modal>\n                        <WrappedComponent {...this.props}/>\n                    </Aux>\n                )\n        }\n    }\n}\n\nexport default withErrorHandler","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-burger-app-f6f73.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Aux from '../../hoc/Auxillary/Auxillary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/ErrorHandler/WithErrorHandler';\nimport axios from '../../axios-orders';\nimport * as actionTypes from '../../store/action'\n\nclass BurgerBuilder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            purchasing: false,\n            loading: false,\n            error: false}\n    }\n\n    componentDidMount () {\n        // axios.get( 'https://react-my-burger.firebaseio.com/ingredients.json' )\n        //     .then( response => {\n        //         this.setState( { ingredients: response.data } );\n        //     } )\n        //     .catch( error => {\n        //         this.setState( { error: true } );\n        //     } );\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        price={this.props.price} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        if ( this.state.loading ) {\n            orderSummary = <Spinner />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENT, ingredientName: ingName}),\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingName})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: '',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n        loading: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n        this.setState( { loading: true } );\n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n        axios.post( '/orders.json', order )\n            .then( response => {\n                this.setState( { loading: false } );\n                this.props.history.push( '/' );\n            } )\n            .catch( error => {\n                this.setState( { loading: false } );\n            } );\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.state.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        price: state.totalPrice\n    }\n};\n\nexport default connect(mapStateToProps)(ContactData);","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.props.ings}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    component={ContactData} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients\n    }\n};\n\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\n\nimport classes from './Order.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>Rs. {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/ErrorHandler/WithErrorHandler';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render () {\n        return (\n            <div>\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './action'\n\nconst initialState = {\n    ingredients: {\n        salad: 0,\n        bacon:0,\n        meat:0,\n        cheese:0\n    },\n    totalPrice: 10,\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 10,\n    cheese: 14.50,\n    meat: 27.50,\n    bacon: 38.50\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n            };\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}